name: Gradle Deployment

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: deploy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH and Deploy
        env:
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SQL_URL: ${{ secrets.SQL_URL }}
          SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/kds_rsa
          chmod 600 ~/.ssh/kds_rsa
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/kds_rsa admin@$SERVER_IP << 'EOF'
            export SQL_URL="$SQL_URL"
            export SQL_USERNAME="$SQL_USERNAME"
            export SQL_PASSWORD="$SQL_PASSWORD"
            cd kds-app
            git pull
            ./gradlew clean build -x test
            echo "Successfully built app"
          
            # Останавливаем и удаляем старый контейнер
            docker stop kds-app || true
            docker rm kds-app || true
            echo "Previous container was removed"

            # Удаляем старый образ (если нужно)
            docker image rm kds-app_kds-app:latest || true
            echo "Removed old image"

            # Собираем новый образ
            docker-compose build kds-app
            echo "Build new image"

            docker run -d \
              --name kds-app \
              --network kds-network \
              -p 8000:8000 \
              -e SQL_URL=jdbc:postgresql://kds-db:5432/kds \
              -e SQL_USERNAME="$SQL_USERNAME" \
              -e SQL_PASSWORD="$SQL_PASSWORD" \
              kds-app_kds-app:latest
        
            echo "Deployment successful"

            echo "Running container"
            sleep 40

            if curl -v http://localhost:8000/actuator/health | grep -q '"status":"UP"'; then
              echo "New container is healthy, proceeding with deployment"
            else
              echo "New container failed health check, rolling back"
              exit 1
            fi          
          EOF
